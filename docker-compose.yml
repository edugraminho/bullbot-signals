services:
  app:
    build: .
    volumes:
      - .:/app
    ports:
      - 8088:8000
    depends_on:
      - db
      - redis
    env_file:
      - .env
    networks:
      - crypto_network

  db:
    image: postgres:17.1
    env_file:
      - .env
    ports:
      - "5438:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - crypto_network
  
  celery_worker:
    build:
      context: .
    command: celery -A src.tasks.celery_app worker --loglevel=info --concurrency=2
    volumes:
      - .:/app
    depends_on:
      - redis
      - db
    env_file:
      - .env
    networks:
      - crypto_network
      
  celery_beat:
    build:
      context: .
    command: celery -A src.tasks.celery_app beat --loglevel=info
    volumes:
      - .:/app
    depends_on:
      - redis
      - db
    env_file:
      - .env
    networks:
      - crypto_network

  telegram_bot:
    build:
      context: .
    command: python -c "import asyncio; from src.integrations.telegram_handlers import run_telegram_bot; asyncio.run(run_telegram_bot())"
    volumes:
      - .:/app
    depends_on:
      - redis
      - db
    env_file:
      - .env
    networks:
      - crypto_network
    restart: unless-stopped

  redis:
    image: redis:8.0
    ports:
      - "6388:6379"
    networks:
      - crypto_network 

volumes:
  pgdata:

networks:
  crypto_network:
    driver: bridge 